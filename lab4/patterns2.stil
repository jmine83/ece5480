STIL 1.0 { Design 2005; }
Header {
   Title "  TetraMAX (TM)  I-2013.12-i131119_202652 STIL output";
   Date "Thu Feb 22 12:00:21 2018";
   History {
      Ann {*     Uncollapsed Stuck Fault Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* fault class                     code   #faults *}
      Ann {* ------------------------------  ----  --------- *}
      Ann {* Detected                         DT       1085 *}
      Ann {* Possibly detected                PT          0 *}
      Ann {* Undetectable                     UD          1 *}
      Ann {* ATPG untestable                  AU          0 *}
      Ann {* Not detected                     ND         28 *}
      Ann {* ----------------------------------------------- *}
      Ann {* total faults                              1114 *}
      Ann {* test coverage                            97.48% *}
      Ann {* fault coverage                           97.40% *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {*            Pattern Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* #internal patterns                          82 *}
      Ann {*     #fast_sequential patterns               82 *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {* There are no rule fails *}
      Ann {* There are no clocks *}
      Ann {* There are no constraint ports *}
      Ann {* There are no equivalent pins *}
      Ann {* There are no net connections *}
      Ann {* Unified STIL Flow *}
      Ann {* min_n_shifts = 1 *}
      Ann {* serial_flag = 0 *}
   }
}
Signals {
   "N1" In; "N2" In; "N3" In; "N4" In; "N5" In; "N6" In; "N7" In; "N8" In; "N9" In;
   "N10" In; "N11" In; "N12" In; "N13" In; "N14" In; "N15" In; "N16" In; "N17" In;
   "N18" In; "N19" In; "N20" In; "N21" In; "N22" In; "N23" In; "N24" In; "N25" In;
   "N26" In; "N27" In; "N28" In; "N29" In; "N30" In; "N31" In; "N32" In; "N33" In;
   "N34" In; "N35" In; "N36" In; "N500" Out; "N501" Out; "N502" Out; "N503" Out; "N504" Out;
   "N505" Out; "N506" Out;
}
SignalGroups {
   "_default_In_Timing_" = '"N1" + "N2" + "N3" + "N4" + "N5" + "N6" + "N7" +
   "N8" + "N9" + "N10" + "N11" + "N12" + "N13" + "N14" + "N15" + "N16" + "N17" +
   "N18" + "N19" + "N20" + "N21" + "N22" + "N23" + "N24" + "N25" + "N26" + "N27" +
   "N28" + "N29" + "N30" + "N31" + "N32" + "N33" + "N34" + "N35" + "N36"'; // #signals=36
   "_pi" = '"N1" + "N2" + "N3" + "N4" + "N5" + "N6" + "N7" + "N8" + "N9" + "N10" +
   "N11" + "N12" + "N13" + "N14" + "N15" + "N16" + "N17" + "N18" + "N19" + "N20" +
   "N21" + "N22" + "N23" + "N24" + "N25" + "N26" + "N27" + "N28" + "N29" + "N30" +
   "N31" + "N32" + "N33" + "N34" + "N35" + "N36"'; // #signals=36
   "_in" = '"N1" + "N2" + "N3" + "N4" + "N5" + "N6" + "N7" + "N8" + "N9" + "N10" +
   "N11" + "N12" + "N13" + "N14" + "N15" + "N16" + "N17" + "N18" + "N19" + "N20" +
   "N21" + "N22" + "N23" + "N24" + "N25" + "N26" + "N27" + "N28" + "N29" + "N30" +
   "N31" + "N32" + "N33" + "N34" + "N35" + "N36"'; // #signals=36
   "_default_Out_Timing_" = '"N500" + "N501" + "N502" + "N503" + "N504" + "N505" +
   "N506"'; // #signals=7
   "_po" = '"N500" + "N501" + "N502" + "N503" + "N504" + "N505" + "N506"'; // #signals=7
   "_out" = '"N500" + "N501" + "N502" + "N503" + "N504" + "N505" + "N506"'; // #signals=7
}
Timing {
   WaveformTable "_default_WFT_" {
      Period '100ns';
      Waveforms {
         "_default_In_Timing_" { 0 { '0ns' D; } }
         "_default_In_Timing_" { 1 { '0ns' U; } }
         "_default_In_Timing_" { Z { '0ns' Z; } }
         "_default_In_Timing_" { N { '0ns' N; } }
         "_default_Out_Timing_" { X { '0ns' X; } }
         "_default_Out_Timing_" { H { '0ns' X; '40ns' H; } }
         "_default_Out_Timing_" { T { '0ns' X; '40ns' T; } }
         "_default_Out_Timing_" { L { '0ns' X; '40ns' L; } }
      }
   }
}
ScanStructures {
   // Uncomment and modify the following to suit your design
   // ScanChain "chain_name" { ScanIn "chain_input_name"; ScanOut "chain_output_name"; }
}
PatternBurst "_burst_" {
   PatList { "_pattern_" {
   }
}}
PatternExec {
   PatternBurst "_burst_";
}
Procedures {
   "capture" {
      W "_default_WFT_";
      C { "_po"=\r7 X ; }
      "forcePI": V { "_pi"=\r36 # ; }
      "measurePO": V { "_po"=\r7 # ; }
   }
   // Uncomment and modify the following to suit your design
   // load_unload {
      // V { } // force clocks off and scan enable pins active
      // Shift { V { _si=#; _so=#; }} // pulse shift clocks
   // }
}
MacroDefs {
}
Pattern "_pattern_" {
   W "_default_WFT_";
   "precondition all Signals": C { "_pi"=\r36 0 ; "_po"=\r7 X ; }
   Ann {* fast_sequential *}
   "pattern 0": V { "_pi"=110000000101010000111001001010101101; }
   Call "capture" { 
      "_pi"=110000000101010000111001001010101101; "_po"=HHHHHHH; }
   Ann {* fast_sequential *}
   "pattern 1": V { "_pi"=010000011100111011011001000010001111; }
   Call "capture" { 
      "_pi"=010000011100111011011001000010001111; "_po"=HHHLHHH; }
   Ann {* fast_sequential *}
   "pattern 2": V { "_pi"=000000011000101110111001110111100000; }
   Call "capture" { 
      "_pi"=000000011000101110111001110111100000; "_po"=LHLHHHH; }
   Ann {* fast_sequential *}
   "pattern 3": V { "_pi"=011000001111000111100010000110001100; }
   Call "capture" { 
      "_pi"=011000001111000111100010000110001100; "_po"=HHHHHHH; }
   Ann {* fast_sequential *}
   "pattern 4": V { "_pi"=100100001010100100111011001000001110; }
   Call "capture" { 
      "_pi"=100100001010100100111011001000001110; "_po"=HLHHLLL; }
   Ann {* fast_sequential *}
   "pattern 5": V { "_pi"=010010010011010000011010110000100100; }
   Call "capture" { 
      "_pi"=010010010011010000011010110000100100; "_po"=HHHHHHH; }
   Ann {* fast_sequential *}
   "pattern 6": V { "_pi"=101011001010001100010001111011101100; }
   Call "capture" { 
      "_pi"=101011001010001100010001111011101100; "_po"=HHHHLLL; }
   Ann {* fast_sequential *}
   "pattern 7": V { "_pi"=011010110000001110110011011111000101; }
   Call "capture" { 
      "_pi"=011010110000001110110011011111000101; "_po"=HHLHLLL; }
   Ann {* fast_sequential *}
   "pattern 8": V { "_pi"=010110010100000000111000000110101100; }
   Call "capture" { 
      "_pi"=010110010100000000111000000110101100; "_po"=HHHHLLL; }
   Ann {* fast_sequential *}
   "pattern 9": V { "_pi"=000011010000100110101001100101000100; }
   Call "capture" { 
      "_pi"=000011010000100110101001100101000100; "_po"=HHHHHHH; }
   Ann {* fast_sequential *}
   "pattern 10": V { "_pi"=111101001001001110001001011000101111; }
   Call "capture" { 
      "_pi"=111101001001001110001001011000101111; "_po"=HLLHLLL; }
   Ann {* fast_sequential *}
   "pattern 11": V { "_pi"=111110101111001110011000011111101101; }
   Call "capture" { 
      "_pi"=111110101111001110011000011111101101; "_po"=HHLHLLL; }
   Ann {* fast_sequential *}
   "pattern 12": V { "_pi"=001010001011010000010010101100000010; }
   Call "capture" { 
      "_pi"=001010001011010000010010101100000010; "_po"=LHHHHHH; }
   Ann {* fast_sequential *}
   "pattern 13": V { "_pi"=100010010000111110001011000000001010; }
   Call "capture" { 
      "_pi"=100010010000111110001011000000001010; "_po"=HLLHHHH; }
   Ann {* fast_sequential *}
   "pattern 14": V { "_pi"=010111000101101000000001001100001100; }
   Call "capture" { 
      "_pi"=010111000101101000000001001100001100; "_po"=HHHHLLL; }
   Ann {* fast_sequential *}
   "pattern 15": V { "_pi"=000101001001001101000110010011001100; }
   Call "capture" { 
      "_pi"=000101001001001101000110010011001100; "_po"=HHHHLLL; }
   Ann {* fast_sequential *}
   "pattern 16": V { "_pi"=101101100010100001010110000011101101; }
   Call "capture" { 
      "_pi"=101101100010100001010110000011101101; "_po"=HHHHHLL; }
   Ann {* fast_sequential *}
   "pattern 17": V { "_pi"=111100010010100011100101100000101101; }
   Call "capture" { 
      "_pi"=111100010010100011100101100000101101; "_po"=HHLHLHH; }
   Ann {* fast_sequential *}
   "pattern 18": V { "_pi"=000000110010001110110100101110110011; }
   Call "capture" { 
      "_pi"=000000110010001110110100101110110011; "_po"=LHLHLHH; }
   Ann {* fast_sequential *}
   "pattern 19": V { "_pi"=111110001011001011011010010110001100; }
   Call "capture" { 
      "_pi"=111110001011001011011010010110001100; "_po"=HHHHLLL; }
   Ann {* fast_sequential *}
   "pattern 20": V { "_pi"=100010000001000100100010111010111001; }
   Call "capture" { 
      "_pi"=100010000001000100100010111010111001; "_po"=HLLHHHH; }
   Ann {* fast_sequential *}
   "pattern 21": V { "_pi"=001110010001100010101100000011100100; }
   Call "capture" { 
      "_pi"=001110010001100010101100000011100100; "_po"=HHHHLHH; }
   Ann {* fast_sequential *}
   "pattern 22": V { "_pi"=001010110010001110101011101011010011; }
   Call "capture" { 
      "_pi"=001010110010001110101011101011010011; "_po"=HHHHLLH; }
   Ann {* fast_sequential *}
   "pattern 23": V { "_pi"=110101111000101100111000110001000100; }
   Call "capture" { 
      "_pi"=110101111000101100111000110001000100; "_po"=HHHHLHL; }
   Ann {* fast_sequential *}
   "pattern 24": V { "_pi"=100010010001001100000010101000110100; }
   Call "capture" { 
      "_pi"=100010010001001100000010101000110100; "_po"=LHHHHHH; }
   Ann {* fast_sequential *}
   "pattern 25": V { "_pi"=101001110000101000011001101100110000; }
   Call "capture" { 
      "_pi"=101001110000101000011001101100110000; "_po"=HLHHHHH; }
   Ann {* fast_sequential *}
   "pattern 26": V { "_pi"=100100010001100000111001000000110011; }
   Call "capture" { 
      "_pi"=100100010001100000111001000000110011; "_po"=LLLHHHH; }
   Ann {* fast_sequential *}
   "pattern 27": V { "_pi"=100010110100001100000011101000101010; }
   Call "capture" { 
      "_pi"=100010110100001100000011101000101010; "_po"=LHHHHHL; }
   Ann {* fast_sequential *}
   "pattern 28": V { "_pi"=100110011010100111100000001110000010; }
   Call "capture" { 
      "_pi"=100110011010100111100000001110000010; "_po"=LLHHHHH; }
   Ann {* fast_sequential *}
   "pattern 29": V { "_pi"=100010111011101000001000100010110011; }
   Call "capture" { 
      "_pi"=100010111011101000001000100010110011; "_po"=LLLHHHH; }
   Ann {* fast_sequential *}
   "pattern 30": V { "_pi"=101000101011101010100110000000111001; }
   Call "capture" { 
      "_pi"=101000101011101010100110000000111001; "_po"=HLHHHHH; }
   Ann {* fast_sequential *}
   "pattern 31": V { "_pi"=110001100111101010110110001000101110; }
   Call "capture" { 
      "_pi"=110001100111101010110110001000101110; "_po"=HLHHHHH; }
   Ann {* fast_sequential *}
   "pattern 32": V { "_pi"=011111110010001001100111111101111110; }
   Call "capture" { 
      "_pi"=011111110010001001100111111101111110; "_po"=HLHHHLL; }
   Ann {* fast_sequential *}
   "pattern 33": V { "_pi"=101110011011111111011010010000001011; }
   Call "capture" { 
      "_pi"=101110011011111111011010010000001011; "_po"=HHLHLHL; }
   Ann {* fast_sequential *}
   "pattern 34": V { "_pi"=010010101101111110011001100110001110; }
   Call "capture" { 
      "_pi"=010010101101111110011001100110001110; "_po"=HHLLHHL; }
   Ann {* fast_sequential *}
   "pattern 35": V { "_pi"=001110111111111110111111111011100011; }
   Call "capture" { 
      "_pi"=001110111111111110111111111011100011; "_po"=HLHHLLH; }
   Ann {* fast_sequential *}
   "pattern 36": V { "_pi"=101111101011101010101010111000101111; }
   Call "capture" { 
      "_pi"=101111101011101010101010111000101111; "_po"=HLHHLHL; }
   Ann {* fast_sequential *}
   "pattern 37": V { "_pi"=110111111110101110001010111100001101; }
   Call "capture" { 
      "_pi"=110111111110101110001010111100001101; "_po"=HHLHLLL; }
   Ann {* fast_sequential *}
   "pattern 38": V { "_pi"=110011001110110010111100110000111001; }
   Call "capture" { 
      "_pi"=110011001110110010111100110000111001; "_po"=HHHHLHL; }
   Ann {* fast_sequential *}
   "pattern 39": V { "_pi"=001111101110111011001111010111101101; }
   Call "capture" { 
      "_pi"=001111101110111011001111010111101101; "_po"=HHLHHLL; }
   Ann {* fast_sequential *}
   "pattern 40": V { "_pi"=011111011001101110101100010110011011; }
   Call "capture" { 
      "_pi"=011111011001101110101100010110011011; "_po"=HHHHLHH; }
   Ann {* fast_sequential *}
   "pattern 41": V { "_pi"=011010111010111100101110101111101011; }
   Call "capture" { 
      "_pi"=011010111010111100101110101111101011; "_po"=HLHHHHH; }
   Ann {* fast_sequential *}
   "pattern 42": V { "_pi"=010011001110111000001100101110001101; }
   Call "capture" { 
      "_pi"=010011001110111000001100101110001101; "_po"=HHLLHHH; }
   Ann {* fast_sequential *}
   "pattern 43": V { "_pi"=011011101111011110101111111010111111; }
   Call "capture" { 
      "_pi"=011011101111011110101111111010111111; "_po"=HLHHHHL; }
   Ann {* fast_sequential *}
   "pattern 44": V { "_pi"=000011100110101110011110110010101101; }
   Call "capture" { 
      "_pi"=000011100110101110011110110010101101; "_po"=HHLHLHL; }
   Ann {* fast_sequential *}
   "pattern 45": V { "_pi"=101011010000100011001010110010001011; }
   Call "capture" { 
      "_pi"=101011010000100011001010110010001011; "_po"=HHHHHHH; }
   Ann {* fast_sequential *}
   "pattern 46": V { "_pi"=011101111010101110101011101011101111; }
   Call "capture" { 
      "_pi"=011101111010101110101011101011101111; "_po"=HLHLLLL; }
   Ann {* fast_sequential *}
   "pattern 47": V { "_pi"=011000001000111010101010101011001101; }
   Call "capture" { 
      "_pi"=011000001000111010101010101011001101; "_po"=HHLHHHH; }
   Ann {* fast_sequential *}
   "pattern 48": V { "_pi"=011011111010111011111011101011111110; }
   Call "capture" { 
      "_pi"=011011111010111011111011101011111110; "_po"=HLLLHHH; }
   Ann {* fast_sequential *}
   "pattern 49": V { "_pi"=011111101111101011101111101111100111; }
   Call "capture" { 
      "_pi"=011111101111101011101111101111100111; "_po"=HLLLHHL; }
   Ann {* fast_sequential *}
   "pattern 50": V { "_pi"=111010101010111111111100001110101111; }
   Call "capture" { 
      "_pi"=111010101010111111111100001110101111; "_po"=HLLHHHH; }
   Ann {* fast_sequential *}
   "pattern 51": V { "_pi"=011011101010101111000110101111101111; }
   Call "capture" { 
      "_pi"=011011101010101111000110101111101111; "_po"=HLLLHHH; }
   Ann {* fast_sequential *}
   "pattern 52": V { "_pi"=011111111111111101101111111011101111; }
   Call "capture" { 
      "_pi"=011111111111111101101111111011101111; "_po"=HLLLLHH; }
   Ann {* fast_sequential *}
   "pattern 53": V { "_pi"=001111111100011010111111111110101111; }
   Call "capture" { 
      "_pi"=001111111100011010111111111110101111; "_po"=HLLHHLH; }
   Ann {* fast_sequential *}
   "pattern 54": V { "_pi"=111111010011111011101010111011101111; }
   Call "capture" { 
      "_pi"=111111010011111011101010111011101111; "_po"=HLLHHLL; }
   Ann {* fast_sequential *}
   "pattern 55": V { "_pi"=001000101010001110011011100000101000; }
   Call "capture" { 
      "_pi"=001000101010001110011011100000101000; "_po"=LLLHHHH; }
   Ann {* fast_sequential *}
   "pattern 56": V { "_pi"=001000111000101110110000100110010011; }
   Call "capture" { 
      "_pi"=001000111000101110110000100110010011; "_po"=LLLHHHH; }
   Ann {* fast_sequential *}
   "pattern 57": V { "_pi"=001000111011110010100011101010101111; }
   Call "capture" { 
      "_pi"=001000111011110010100011101010101111; "_po"=HLLHHHH; }
   Ann {* fast_sequential *}
   "pattern 58": V { "_pi"=111011100111001100111111010110100111; }
   Call "capture" { 
      "_pi"=111011100111001100111111010110100111; "_po"=HLHHHHH; }
   Ann {* fast_sequential *}
   "pattern 59": V { "_pi"=011111110111101000100111011101000111; }
   Call "capture" { 
      "_pi"=011111110111101000100111011101000111; "_po"=HLHHLHH; }
   Ann {* fast_sequential *}
   "pattern 60": V { "_pi"=011110101111011010110111011010111101; }
   Call "capture" { 
      "_pi"=011110101111011010110111011010111101; "_po"=HLHHHHL; }
   Ann {* fast_sequential *}
   "pattern 61": V { "_pi"=101100000010000001010010101100111000; }
   Call "capture" { 
      "_pi"=101100000010000001010010101100111000; "_po"=HHHHHLL; }
   Ann {* fast_sequential *}
   "pattern 62": V { "_pi"=100100001101000110100011101100000010; }
   Call "capture" { 
      "_pi"=100100001101000110100011101100000010; "_po"=HHHHHHL; }
   Ann {* fast_sequential *}
   "pattern 63": V { "_pi"=010110011010100100110000001110101000; }
   Call "capture" { 
      "_pi"=010110011010100100110000001110101000; "_po"=HHLLLLL; }
   Ann {* fast_sequential *}
   "pattern 64": V { "_pi"=110000000011001010101010001010000010; }
   Call "capture" { 
      "_pi"=110000000011001010101010001010000010; "_po"=LHHLHHH; }
   Ann {* fast_sequential *}
   "pattern 65": V { "_pi"=101101011001001110110000100010110001; }
   Call "capture" { 
      "_pi"=101101011001001110110000100010110001; "_po"=LHLHHHH; }
   Ann {* fast_sequential *}
   "pattern 66": V { "_pi"=100111010010010000101000100010110010; }
   Call "capture" { 
      "_pi"=100111010010010000101000100010110010; "_po"=HHHHHLH; }
   Ann {* fast_sequential *}
   "pattern 67": V { "_pi"=000100101001100100111001101110010100; }
   Call "capture" { 
      "_pi"=000100101001100100111001101110010100; "_po"=LHHHLLL; }
   Ann {* fast_sequential *}
   "pattern 68": V { "_pi"=101100100011000000100001100111010010; }
   Call "capture" { 
      "_pi"=101100100011000000100001100111010010; "_po"=LHHHLLH; }
   Ann {* fast_sequential *}
   "pattern 69": V { "_pi"=100110101001110000111101001000101001; }
   Call "capture" { 
      "_pi"=100110101001110000111101001000101001; "_po"=LHHHHLH; }
   Ann {* fast_sequential *}
   "pattern 70": V { "_pi"=100000110001100111000001100010001010; }
   Call "capture" { 
      "_pi"=100000110001100111000001100010001010; "_po"=LHHHHLL; }
   Ann {* fast_sequential *}
   "pattern 71": V { "_pi"=010101010001001010001101100100001000; }
   Call "capture" { 
      "_pi"=010101010001001010001101100100001000; "_po"=HHHLLLL; }
   Ann {* fast_sequential *}
   "pattern 72": V { "_pi"=010110111000101100111100000000101111; }
   Call "capture" { 
      "_pi"=010110111000101100111100000000101111; "_po"=HHLLLLL; }
   Ann {* fast_sequential *}
   "pattern 73": V { "_pi"=100010101010100110010001110101000001; }
   Call "capture" { 
      "_pi"=100010101010100110010001110101000001; "_po"=LHHHLHL; }
   Ann {* fast_sequential *}
   "pattern 74": V { "_pi"=000110001011101110111001100011011011; }
   Call "capture" { 
      "_pi"=000110001011101110111001100011011011; "_po"=HHLHLLH; }
   Ann {* fast_sequential *}
   "pattern 75": V { "_pi"=010101001011000100000010000001100101; }
   Call "capture" { 
      "_pi"=010101001011000100000010000001100101; "_po"=HHHLLLL; }
   Ann {* fast_sequential *}
   "pattern 76": V { "_pi"=011000000000010100100100001010101101; }
   Call "capture" { 
      "_pi"=011000000000010100100100001010101101; "_po"=HHHLHHH; }
   Ann {* fast_sequential *}
   "pattern 77": V { "_pi"=100100100100010101110010010010010000; }
   Call "capture" { 
      "_pi"=100100100100010101110010010010010000; "_po"=HHHHHHL; }
   Ann {* fast_sequential *}
   "pattern 78": V { "_pi"=011100001010100011000100001010001011; }
   Call "capture" { 
      "_pi"=011100001010100011000100001010001011; "_po"=HHHLHLL; }
   Ann {* fast_sequential *}
   "pattern 79": V { "_pi"=000110001100001100100100000101000110; }
   Call "capture" { 
      "_pi"=000110001100001100100100000101000110; "_po"=HHHHHHL; }
   Ann {* fast_sequential *}
   "pattern 80": V { "_pi"=111110101000110100000110010100010001; }
   Call "capture" { 
      "_pi"=111110101000110100000110010100010001; "_po"=HHHHHLH; }
   Ann {* fast_sequential *}
   "pattern 81": V { "_pi"=001101000101001100101001101001000110; }
   Call "capture" { 
      "_pi"=001101000101001100101001101001000110; "_po"=HHHHHHL; }
}

// Patterns reference 246 V statements, generating 246 test cycles
